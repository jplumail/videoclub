steps:
  - name: "ghcr.io/astral-sh/uv:python3.12-alpine"
    script: uv export --no-emit-project -o requirements.txt
    id: "export-requirements"

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "ensure-topic"
    script: >
      gcloud pubsub topics describe ${_TOPIC} || gcloud pubsub topics create ${_TOPIC}
    waitFor:
      - "export-requirements"

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "deploy-discover"
    script: >
      gcloud functions deploy discover
      --gen2
      --runtime=python312
      --region=${_REGION}
      --source=.
      --entry-point=discover
      --timeout=3600s
      --trigger-http --allow-unauthenticated
    waitFor:
      - "export-requirements"

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "deploy-processor"
    script: >
      gcloud functions deploy processor
      --gen2
      --runtime=python312
      --region=${_REGION}
      --source=.
      --entry-point=processor
      --timeout=540s
      --memory=512MiB
      --trigger-topic=${_TOPIC}
    waitFor:
      - "ensure-topic"

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "deploy-prepare-data"
    script: >
      gcloud functions deploy prepare_data
      --gen2
      --runtime=python312
      --region=${_REGION}
      --source=.
      --entry-point=prepare_data
      --timeout=3600s
      --memory=512MiB
      --set-env-vars=BUCKET=${_BUCKET},REBUILD_SITE_TOPIC=videoclub-rebuild-site
      --trigger-http --allow-unauthenticated
    waitFor:
      - "export-requirements"

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "fetch-prepare-url"
    script: >
      gcloud functions describe prepare_data --gen2 --region=${_REGION} --format='value(serviceConfig.uri)' > /workspace/prepare_url.txt
    waitFor:
      - "deploy-prepare-data"

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "deploy-aggregator"
    script: |
      set -eu
      PREPARE_URL=$(cat /workspace/prepare_url.txt)
      gcloud functions deploy aggregator \
        --gen2 \
        --runtime=python312 \
        --region=${_FIRESTORE_REGION} \
        --trigger-location=${_FIRESTORE_REGION} \
        --source=. \
        --entry-point=aggregator \
        --set-env-vars=PREPARE_DATA_URL=${PREPARE_URL} \
        --trigger-event-filters=type="google.cloud.firestore.document.v1.updated" \
        --trigger-event-filters=database="(default)" \
        --trigger-event-filters-path-pattern="document=batches/{batchId}"
    waitFor:
      - "fetch-prepare-url"


# Manual Cloud Scheduler setup documented in docs/extractor-pipeline.md

substitutions:
  _REGION: europe-west9
  _TOPIC: videoclub-new-video
  _BUCKET: videoclub-test
  _FIRESTORE_REGION: europe-west9

options:
  automapSubstitutions: true
